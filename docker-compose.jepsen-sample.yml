x-debian:
  # See https://salsa.debian.org/jgoerzen/docker-debian-base
  &default-debian
  image: jgoerzen/debian-base-standard
  cgroup: host
  tty: true
  stop_signal: SIGRTMIN+3
  volumes:
    - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    - "jepsen-shared:/var/jepsen/shared"
  tmpfs:
    - /run:size=100M
    - /run/lock:size=100M
  networks:
    - jepsen
  
x-node:
  &default-node
  << : *default-debian
  image: ${JEPSEN_REGISTRY:-}jepsen_node
  build: ./node
  cap_add:
    - ALL
  ports:
    - ${JEPSEN_PORT:-22}
  depends_on: 
    setup:
      condition: service_completed_successfully

volumes:
  jepsen-shared:

networks:
  jepsen:

services:
  setup:
    << : *default-debian
    container_name: jepsen-setup
    hostname: setup
    command:
      - sh
      - -c
      - |
        echo "Clean shared state, generate new ssh keys for control node" | tee -a /var/log/jepsen-setup.log
        rm -rf /var/jepsen/shared/*
        mkdir  /var/jepsen/shared/secrets
        ssh-keygen -t rsa -N "" -f /var/jepsen/shared/secrets/control-id_rsa
  control:
    << : *default-debian
    image: ${JEPSEN_REGISTRY:-}jepsen_control
    build: ./control
    container_name: jepsen-control
    hostname: control
    ports:
      - "22"
      - "8080"
    depends_on:
      n1:
        condition: service_healthy
      n2:
        condition: service_healthy
      n3:
        condition: service_healthy
      n4:
        condition: service_healthy
      n5:
        condition: service_healthy

  n1:
    << : *default-node
    container_name: jepsen-n1
    hostname: n1
  n2:
    << : *default-node
    container_name: jepsen-n2
    hostname: n2
  n3:
    << : *default-node
    container_name: jepsen-n3
    hostname: n3
  n4:
    << : *default-node
    container_name: jepsen-n4
    hostname: n4
  n5:
    << : *default-node
    container_name: jepsen-n5
    hostname: n5

